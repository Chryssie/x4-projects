<?xml version="1.0" encoding="utf-8" ?>
<mdscript name="SN_Measure_Perf" 
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

<!--
  Light support for performance measurements.
-->
<cues>
  <!-- Register the main lua file. -->
  <cue name="Load_Lua_Files" instantiate="true">
    <conditions>
      <event_ui_triggered screen="'Lua_Loader'" control="'Ready'" />
    </conditions>
    <actions>
      <raise_lua_event name="'Lua_Loader.Load'"
                       param="'extensions.sn_measure_perf.lua.Measure_Perf'"/>
    </actions>
  </cue>
  
  <!-- Register the python server. -->
  <cue name="Register_Pipe_Server" instantiate="true">
    <conditions>
      <event_cue_signalled cue="md.Pipe_Server_Host.Reloaded" />
    </conditions>
    <actions>
      <signal_cue_instantly
        cue="md.Pipe_Server_Host.Register_Module"
        param="'extensions/sn_measure_perf/python/Measure_Perf.py'"/>
    </actions>
  </cue>

  <!--
      Static cue for holding general state.
    
      * $DebugChance
        - Int, 0 or 100.
      * $script_sample_period
      * $script_sample_countdown
        - Ints, how many seconds between sampling script counts, and
          the related counter.
      * $md_cue_hits
        - Table, keyed by cue identifier (script name + cue name + etc.),
          holding the number of times it has been visited.
        - Gets added to by other scripts.
    -->
  <cue name="Globals">
    <actions>
      <!-- Create storage table on first load. -->
      <set_value name="Globals.$storage"   exact="table[]"/>
      <include_actions ref="Reset_Globals"/>
    </actions>
    <cues>
      <!-- Listen from the menu api reloading. -->
      <cue name="Reset_On_Lua_Reload" instantiate="true">
        <conditions>
          <event_cue_signalled cue="md.Pipe_Server_Host.Reloaded" />
        </conditions>
        <actions>
          <include_actions ref="Reset_Globals"/>
        </actions>
      </cue>
    </cues>
  </cue>
  <library name="Reset_Globals">
    <actions>
      <set_value name="Globals.$DebugChance" exact="0"/>
      <set_value name="Globals.$script_sample_period"    exact="60s" />
      <set_value name="Globals.$script_sample_countdown" exact="$script_sample_period" />
      <do_if value="not @Globals.$md_cue_hits">
        <set_value name="Globals.$md_cue_hits" exact="table[]"/>        
      </do_if>
    </actions>
  </library>
  
  
  <!-- 
  Sample once every second. This will bounce off lua to pick up some
  information, eg. fps.
  -->
  <cue name="Trigger_Sample" instantiate="true" checkinterval="1s">
    <!--No conditions.-->
    <actions>
      <raise_lua_event name="'Measure_Perf.Get_Sample'"/>
      
      <!--Every so many visits, add extra script counters.-->
      <set_value name="Globals.$script_sample_countdown" operation="subtract" />
      <do_if value="Globals.$script_sample_countdown == 0">
        <set_value name="Globals.$script_sample_countdown" exact="Globals.$script_sample_period" />
        <!--Trigger md-side data transmit. -Removed; less interesting than lua stuff.
        <signal_cue cue="Send_Script_Info"/>-->
        <!--Lua will send the data directly.-->
        <raise_lua_event name="'Measure_Perf.Send_Script_Info'"/>
      </do_if>
    </actions>
  </cue>

  <!--Empty cue with no workload, existing purely to measure the overhead of
  the injected systemtime gathering code.
  TODO: expand the profiling to cover extensions, which will catch this
  naturally, and the action block should be emptied; this is tricky to
  do with how the customizer is designed, though, since it ignores
  its own output folder.
  -->
  <cue name="Empty_Cue" instantiate="true" checkinterval="1s">
    <conditions>
      <!--Disabled until next test. TODO: automate on/off with other script edits.-->
      <check_value value="false"/>
    </conditions>
    <actions>
      <raise_lua_event name="'Measure_Perf.Record_Event'" param="'md.SN_Measure_Perf.Empty_Cue,entry 101,entry,' + player.systemtime.{'%Y-%j-%H-%M-%S'} "/>
      <raise_lua_event name="'Measure_Perf.Record_Event'" param="'md.SN_Measure_Perf.Empty_Cue,exit 102,exit,' + player.systemtime.{'%Y-%j-%H-%M-%S'} "/>
    </actions>
  </cue>

  <!--Heavily loaded cue, to verify timers pick up major in-game lag.
      Test result: success. 100 find_ship commands made noticeable hiccups
      in-game, and timers picked up that ~25% of the compute time was
      processing them, which matches up.
  -->
  <cue name="Load_Cue" instantiate="true" checkinterval="1s">
    <conditions>
      <!--Disabled.-->
      <check_value value="false"/>
    </conditions>
    <actions>
      <raise_lua_event name="'Measure_Perf.Record_Event'" param="'md.SN_Measure_Perf.Load_Cue,entry 114,entry,' + player.systemtime.{'%Y-%j-%H-%M-%S'} "/>
      <!--Find_ship spam seems to work well for triggering slowdown.-->
      <set_value name="$i" exact="100"/>
      <do_while value="$i > 0">
        <set_value name="$i" operation="subtract"/>
        <find_ship groupname="$ships" multiple="true" recursive="true"
                    masstraffic="false" space="player.galaxy"
                    functional="true"/>
      </do_while>
      <raise_lua_event name="'Measure_Perf.Record_Event'" param="'md.SN_Measure_Perf.Load_Cue,exit 115,exit,' + player.systemtime.{'%Y-%j-%H-%M-%S'} "/>
    </actions>
  </cue>

  <!-- 
  When lua responds, capture its message, fill in additional information,
  and send it all to python for handling.
  
  Messages will be key:value pairs, semicolon separated, starting
  with an 'update;' string.
  -->
  <cue name="Send_Sample" instantiate="true">
    <conditions>
      <event_ui_triggered screen="'Measure_Perf'" control="'Sample'" />
    </conditions>
    <actions>
      <!-- Grab the returned value, use it to init the dict of measurements.-->
      <set_value name="$response" exact="event.param3" />
      
      <!--Add the current time, possibly hex edited for higher precision
          at cost of wacky overall number. (Don't use colons.)
          Removed; not necessary anymore, system works well.
      <set_value name="$response.{'$systemtime'}" exact="player.systemtime.{'%Y,%j,%H,%M,%S'}"/>-->
      
      <!--Construct the message string.-->
      <set_value name="$msg" exact="'update;'" />
      <do_for_each name="$key" valuename="$value" in="$response">
        <set_value name="$msg" exact="'%s%s:%s;'.[$msg, $key, $value]"/>
      </do_for_each>
      
      <!--Send to the pipe.-->
      <signal_cue_instantly
        cue="md.Named_Pipes.Write"
        param="table[$pipe='x4_perf', $msg=$msg]"/>
    </actions>
  </cue>
  
  
  <!-- 
  General script info, not including detailed timers.
  
  Messages will be key:value pairs, semicolon separated, starting
  with an 'update;' string.
  -->
  <cue name="Send_Script_Info" instantiate="true">
    <conditions>
      <event_cue_signalled />
      <!--<event_ui_triggered screen="'Measure_Perf'" control="'Script_Info'" />-->
    </conditions>
    <actions>
      <set_value name="$lua_data" exact="event.param3"/>
      <set_value name="$response" exact="table[]" />


      <!--Find all ships, pull their script names.-->
      <!--TODO: maybe trim off some of this info.-->
      <find_ship groupname="$ships" multiple="true" recursive="true" 
                  masstraffic="false" space="player.galaxy"
                  functional="true"/>
      
      <do_for_each name="$ship" in="$ships">
        
        <!--Values of interest, with prefix to use.-->
        <!--Ship may have no pilot, or no command; check for null.-->
        <set_value name="$values" exact="table[
                    $ai_command     = @$ship.pilot.command.value, 
                    $ai_action      = @$ship.pilot.commandaction.value, 
                    $ai_script      = @$ship.pilot.$script_name,
                    $ai_element     = @$ship.pilot.$element_name,
                    $ai_scriptline  = @$ship.pilot.$script_line_name,                     
                    ]"/>

        <do_for_each name="$prefix" valuename="$value" in="$values">

          <do_if value="$value != null">
            <!--Prefix for being a table key, and clarifying message.-->
            <set_value name="$value" exact="$prefix + '.' + $value"/>
            <do_if value="not $response.{$value}?">
              <set_value name="$response.{$value}" exact="0"/>
            </do_if>
            <set_value name="$response.{$value}" operation="add"/>
          </do_if>
        </do_for_each>
          
        <!--More complicated: sum scriptline counts from the pilot, 
            for how often they hit the line.-->
        <do_if value="@$ship.pilot.$script_line_hits != null">
          <!--Loop over the counts; note: the ai table key has $ prefixed.-->
          <do_for_each name="$scriptline" valuename="$count" in="$ship.pilot.$script_line_hits">
            <!--Prefix again anyway, for python to pick up.-->
            <set_value name="$key" exact="'$ai_scriptline_hits.'+$scriptline"/>
              
            <!--As above, start the count, then add to it.-->
            <do_if value="not $response.{$key}?">
              <set_value name="$response.{$key}" exact="0"/>
            </do_if>
            <set_value name="$response.{$key}" operation="add" exact="$count"/>
              
            <!--Reset the count, so these are just for 60s spans.-->
            <remove_value name="$ship.pilot.$script_line_hits.{$scriptline}"/>              
          </do_for_each>
        </do_if>        
      </do_for_each>
      
      <!--Collect the sums of md cue/library calls.-->
      <do_for_each name="$cue_id" valuename="$count" in="Globals.$md_cue_hits">
        <!--Prefix again anyway, for python to pick up.-->
        <set_value name="$key" exact="'$md_cue_hits.'+$cue_id"/>
        <set_value name="$response.{$key}" exact="$count"/>
        <!--Reset the count.-->
        <remove_value name="Globals.$md_cue_hits.{$cue_id}"/>
      </do_for_each>
        
      
      <!--Construct the message string.-->
      <set_value name="$msg" exact="'ai_metrics;'" />
      <do_for_each name="$key" valuename="$value" in="$response">
        <set_value name="$msg" exact="'%s:%s;'.[$key, $value]" operation="add"/>
      </do_for_each>
      
      <!--Send to the pipe.-->
      <signal_cue_instantly
        cue="md.Named_Pipes.Write"
        param="table[$pipe='x4_perf', $msg=$msg]"/>


      <!--Note: below code is newer, and aiming for a different interface setup.-->
      <!--Collect lua timestamp based info.-->
      <!--TODO: is there an easy way to serialize a table of string data?-->
      <!--<debug_text text="'script_info;%s'.[$response]" filter="general"/>-->
      
    </actions>
  </cue>

  
  <!--Testing using open_menu, intercepted by lua, to do direct calls that
      resolve within the md node, not after actions finish.
      Test results: couldn't get lua to trigger before md actions finished.-->
  <!--<cue name="Lua_Call_Test" instantiate="true" checkinterval="1s">
    <actions>-->
      
      <!--Remove any existing player blackboard var from prio tests.
      <do_if value="player.entity.$call_lua_response?">
        <debug_text text="'Cleaning up old response before CallLua: %s'.[player.entity.$call_lua_response]"
                  chance="100" filter="general"/>
        <remove_value name="player.entity.$call_lua_response" />
      </do_if>-->
      
      <!--Set up an arg to pass.
      <set_value name="player.entity.$call_lua_arg" exact="'md_hello'"/>-->
      
      <!--Try commands. lua should toss a debugerror; check log on timings.-->
      <!--<debug_text text="'MD Starting'" chance="100" filter="general"/>-->
      
      <!--open_menu has a delay; test failed.-->
      <!--<open_menu menu="CallLua"/>-->

      <!--Try out a conversation instead. This doesn't open until a choice is added.-->
      <!--<start_conversation actor="player.computer" conversation="test_conv"/>
      <add_player_choice text="'test'" section="test_section"/>
      <add_conversation_view />
      
      
      <debug_text text="'MD Finished'" chance="100" filter="general"/>-->
      
      <!--If this works, player blackboard should have a response.
      <do_if value="player.entity.$call_lua_response?">
        <set_value name="$result" exact="'success'"/>
        <debug_text text="'Response from lua: %s'.[player.entity.$call_lua_response]"
                  chance="100" filter="general"/>
        <remove_value name="player.entity.$call_lua_response" />
      </do_if>
      <do_else>
        <debug_text text="'Error: No immediate response from lua'"
                  chance="100" filter="general"/>
        <set_value name="$result" exact="'fail'"/>        
      </do_else>
      <raise_lua_event name="'directChatMessageReceived'" param="'LuaCall;test: %s'.[$result]"/>-->
      
    <!--</actions>    
  </cue>-->

  <!--<cue name="Kill_Conversation" instantiate="true">
    <conditions>
      <event_conversation_started actor="player.computer" conversation="test_conv"/>
    </conditions>
    <actions>
      <debug_text text="'Killing conversation'" chance="100" filter="general"/>
      <cancel_conversation actor="player.computer" conversation="test_conv" force="true" />
      <debug_text text="'Killed conversation'" chance="100" filter="general"/>
    </actions>
  </cue>-->

  
  <!--Test how many bounces can be done between lua/md in a frame.
      Mostly lua side; just bounce a count here.
      Test result: always 1 frame delay going from lua to md, 0 delay md to lua.
  -->
  <cue name="Lua_Bounce_Test" instantiate="true">
    <conditions>
      <event_ui_triggered screen="'Measure_Perf'" control="'Bounce_Test'" />
    </conditions>
    <actions>
      <debug_text text="'%s'.[player.age]" filter="general"/>
      <raise_lua_event name="'Measure_Perf.Bounce_Test'" param="event.param3"/>
    </actions>
  </cue>

  <!--Test how many bounces can be done between two md cues in a frame.
      Goal is to detect if the game prevents the same cue firing twice
      in a frame (eg. to prevent infinite loops).
      
      Test result: no frame delay, but md engine gives up after 64 steps
      with a log error:
      "Too many recursive cue actions! Skipping actions of cue md.SN_Measure_Perf.Bounce_MD_2"
      Suggests inter-cue signalling can only go 64 deep in a frame.
      
      Alt test: copy/paste out 65 cues and see what happens (eg. does this
      depend on cues looping, or just a depth problem?).
      Result: still get recursion error with separate cues.
      
      Test: what is the cues use signal_cue instead of signal_cue_instantly?
      Result: no depth error.
      
      Test: what about signal_cue with two cues in a loop?
      Result: no depth error, all cues processed in the same frame.
  -->
  <cue name="Bounce_MD_Start"  instantiate="true" checkinterval="5s">
    <conditions>
      <check_value value="false"/>
    </conditions>
    <actions>
      <raise_lua_event name="'directChatMessageReceived'" param="'Test;started'"/>
      <!--<signal_cue_instantly cue="Bounce_MD_a" param="100"/>-->
      <!--<signal_cue_instantly cue="Chain_MD_0" param="100"/>-->
      <!--<signal_cue_instantly cue="Chain_MD_delay_0" param="100"/>-->

    </actions>
    <cues>
      <cue name="Keep_Alive" checktime="player.age + 1s" checkinterval="1s">
        <actions>
          <cancel_cue cue="parent"/>
        </actions>
      </cue>
      <!--Child cues, using parent namespace to avoid needing param passing.-->
      <cue name="Bounce_MD_delay_Start">
        <actions>
          <set_value name="$count" exact="100"/>
          <signal_cue cue="Bounce_MD_delay_a"/>          
        </actions>
      </cue>
      <cue name="Bounce_MD_delay_a" instantiate="true">
        <conditions>
          <event_cue_signalled/>
        </conditions>
        <actions>
          <debug_text text="'Bounce_MD_delay_a %s at %s'.[$count, player.age]" filter="general"/>
          <do_if value="$count gt 0">
            <set_value name="$count" exact="1" operation="subtract"/>
            <signal_cue cue="Bounce_MD_delay_b"/>
          </do_if>
        </actions>
      </cue>
      <cue name="Bounce_MD_delay_b" instantiate="true">
        <conditions>
          <event_cue_signalled/>
        </conditions>
        <actions>
          <debug_text text="'Bounce_MD_delay_b %s at %s'.[$count, player.age]" filter="general"/>
          <do_if value="$count gt 0">
            <set_value name="$count" exact="1" operation="subtract"/>
            <signal_cue cue="Bounce_MD_delay_a"/>
          </do_if>
        </actions>
      </cue>      
    </cues>
  </cue>
  
  <cue name="Bounce_MD_a" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Bounce_MD_a %s at %s'.[event.param, player.age]" filter="general"/>
      <do_if value="event.param gt 0">
        <signal_cue_instantly cue="Bounce_MD_b" param="event.param -1"/>
      </do_if>
    </actions>
  </cue>
  <cue name="Bounce_MD_b" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Bounce_MD_b %s at %s'.[event.param, player.age]" filter="general"/>
      <do_if value="event.param gt 0">
        <signal_cue_instantly cue="Bounce_MD_a" param="event.param -1"/>
      </do_if>
    </actions>
  </cue>
  
  <cue name="Chain_MD_0"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_1"/></actions></cue>
  <cue name="Chain_MD_1"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_2"/></actions></cue>
  <cue name="Chain_MD_2"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_3"/></actions></cue>
  <cue name="Chain_MD_3"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_4"/></actions></cue>
  <cue name="Chain_MD_4"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_5"/></actions></cue>
  <cue name="Chain_MD_5"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_6"/></actions></cue>
  <cue name="Chain_MD_6"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_7"/></actions></cue>
  <cue name="Chain_MD_7"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_8"/></actions></cue>
  <cue name="Chain_MD_8"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_9"/></actions></cue>
  <cue name="Chain_MD_9"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_10"/></actions></cue>  
  <cue name="Chain_MD_10" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_11"/></actions></cue>
  <cue name="Chain_MD_11" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_12"/></actions></cue>
  <cue name="Chain_MD_12" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_13"/></actions></cue>
  <cue name="Chain_MD_13" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_14"/></actions></cue>
  <cue name="Chain_MD_14" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_15"/></actions></cue>
  <cue name="Chain_MD_15" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_16"/></actions></cue>
  <cue name="Chain_MD_16" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_17"/></actions></cue>
  <cue name="Chain_MD_17" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_18"/></actions></cue>
  <cue name="Chain_MD_18" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_19"/></actions></cue>
  <cue name="Chain_MD_19" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_20"/></actions></cue>  
  <cue name="Chain_MD_20" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_21"/></actions></cue>
  <cue name="Chain_MD_21" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_22"/></actions></cue>
  <cue name="Chain_MD_22" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_23"/></actions></cue>
  <cue name="Chain_MD_23" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_24"/></actions></cue>
  <cue name="Chain_MD_24" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_25"/></actions></cue>
  <cue name="Chain_MD_25" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_26"/></actions></cue>
  <cue name="Chain_MD_26" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_27"/></actions></cue>
  <cue name="Chain_MD_27" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_28"/></actions></cue>
  <cue name="Chain_MD_28" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_29"/></actions></cue>
  <cue name="Chain_MD_29" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_30"/></actions></cue>  
  <cue name="Chain_MD_30" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_31"/></actions></cue>
  <cue name="Chain_MD_31" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_32"/></actions></cue>
  <cue name="Chain_MD_32" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_33"/></actions></cue>
  <cue name="Chain_MD_33" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_34"/></actions></cue>
  <cue name="Chain_MD_34" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_35"/></actions></cue>
  <cue name="Chain_MD_35" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_36"/></actions></cue>
  <cue name="Chain_MD_36" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_37"/></actions></cue>
  <cue name="Chain_MD_37" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_38"/></actions></cue>
  <cue name="Chain_MD_38" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_39"/></actions></cue>
  <cue name="Chain_MD_39" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_40"/></actions></cue>  
  <cue name="Chain_MD_40" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_41"/></actions></cue>
  <cue name="Chain_MD_41" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_42"/></actions></cue>
  <cue name="Chain_MD_42" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_43"/></actions></cue>
  <cue name="Chain_MD_43" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_44"/></actions></cue>
  <cue name="Chain_MD_44" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_45"/></actions></cue>
  <cue name="Chain_MD_45" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_46"/></actions></cue>
  <cue name="Chain_MD_46" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_47"/></actions></cue>
  <cue name="Chain_MD_47" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_48"/></actions></cue>
  <cue name="Chain_MD_48" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_49"/></actions></cue>
  <cue name="Chain_MD_49" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_50"/></actions></cue>  
  <cue name="Chain_MD_50" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_51"/></actions></cue>
  <cue name="Chain_MD_51" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_52"/></actions></cue>
  <cue name="Chain_MD_52" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_53"/></actions></cue>
  <cue name="Chain_MD_53" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_54"/></actions></cue>
  <cue name="Chain_MD_54" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_55"/></actions></cue>
  <cue name="Chain_MD_55" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_56"/></actions></cue>
  <cue name="Chain_MD_56" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_57"/></actions></cue>
  <cue name="Chain_MD_57" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_58"/></actions></cue>
  <cue name="Chain_MD_58" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_59"/></actions></cue>
  <cue name="Chain_MD_59" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_60"/></actions></cue>  
  <cue name="Chain_MD_60" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_61"/></actions></cue>
  <cue name="Chain_MD_61" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_62"/></actions></cue>
  <cue name="Chain_MD_62" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_63"/></actions></cue>
  <cue name="Chain_MD_63" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_64"/></actions></cue>
  <cue name="Chain_MD_64" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_65"/></actions></cue>
  <cue name="Chain_MD_65" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_66"/></actions></cue>
  <cue name="Chain_MD_66" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_67"/></actions></cue>
  <cue name="Chain_MD_67" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_68"/></actions></cue>
  <cue name="Chain_MD_68" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue_instantly cue="Chain_MD_69"/></actions></cue>
  <cue name="Chain_MD_69" instantiate="true"><conditions><event_cue_signalled/></conditions><actions></actions></cue>
  
  <cue name="Chain_MD_delay_0"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_1"/></actions></cue>
  <cue name="Chain_MD_delay_1"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_2"/></actions></cue>
  <cue name="Chain_MD_delay_2"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_3"/></actions></cue>
  <cue name="Chain_MD_delay_3"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_4"/></actions></cue>
  <cue name="Chain_MD_delay_4"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_5"/></actions></cue>
  <cue name="Chain_MD_delay_5"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_6"/></actions></cue>
  <cue name="Chain_MD_delay_6"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_7"/></actions></cue>
  <cue name="Chain_MD_delay_7"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_8"/></actions></cue>
  <cue name="Chain_MD_delay_8"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_9"/></actions></cue>
  <cue name="Chain_MD_delay_9"  instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_10"/></actions></cue>  
  <cue name="Chain_MD_delay_10" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_11"/></actions></cue>
  <cue name="Chain_MD_delay_11" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_12"/></actions></cue>
  <cue name="Chain_MD_delay_12" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_13"/></actions></cue>
  <cue name="Chain_MD_delay_13" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_14"/></actions></cue>
  <cue name="Chain_MD_delay_14" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_15"/></actions></cue>
  <cue name="Chain_MD_delay_15" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_16"/></actions></cue>
  <cue name="Chain_MD_delay_16" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_17"/></actions></cue>
  <cue name="Chain_MD_delay_17" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_18"/></actions></cue>
  <cue name="Chain_MD_delay_18" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_19"/></actions></cue>
  <cue name="Chain_MD_delay_19" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_20"/></actions></cue>  
  <cue name="Chain_MD_delay_20" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_21"/></actions></cue>
  <cue name="Chain_MD_delay_21" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_22"/></actions></cue>
  <cue name="Chain_MD_delay_22" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_23"/></actions></cue>
  <cue name="Chain_MD_delay_23" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_24"/></actions></cue>
  <cue name="Chain_MD_delay_24" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_25"/></actions></cue>
  <cue name="Chain_MD_delay_25" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_26"/></actions></cue>
  <cue name="Chain_MD_delay_26" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_27"/></actions></cue>
  <cue name="Chain_MD_delay_27" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_28"/></actions></cue>
  <cue name="Chain_MD_delay_28" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_29"/></actions></cue>
  <cue name="Chain_MD_delay_29" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_30"/></actions></cue>  
  <cue name="Chain_MD_delay_30" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_31"/></actions></cue>
  <cue name="Chain_MD_delay_31" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_32"/></actions></cue>
  <cue name="Chain_MD_delay_32" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_33"/></actions></cue>
  <cue name="Chain_MD_delay_33" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_34"/></actions></cue>
  <cue name="Chain_MD_delay_34" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_35"/></actions></cue>
  <cue name="Chain_MD_delay_35" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_36"/></actions></cue>
  <cue name="Chain_MD_delay_36" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_37"/></actions></cue>
  <cue name="Chain_MD_delay_37" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_38"/></actions></cue>
  <cue name="Chain_MD_delay_38" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_39"/></actions></cue>
  <cue name="Chain_MD_delay_39" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_40"/></actions></cue>  
  <cue name="Chain_MD_delay_40" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_41"/></actions></cue>
  <cue name="Chain_MD_delay_41" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_42"/></actions></cue>
  <cue name="Chain_MD_delay_42" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_43"/></actions></cue>
  <cue name="Chain_MD_delay_43" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_44"/></actions></cue>
  <cue name="Chain_MD_delay_44" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_45"/></actions></cue>
  <cue name="Chain_MD_delay_45" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_46"/></actions></cue>
  <cue name="Chain_MD_delay_46" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_47"/></actions></cue>
  <cue name="Chain_MD_delay_47" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_48"/></actions></cue>
  <cue name="Chain_MD_delay_48" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_49"/></actions></cue>
  <cue name="Chain_MD_delay_49" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_50"/></actions></cue>  
  <cue name="Chain_MD_delay_50" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_51"/></actions></cue>
  <cue name="Chain_MD_delay_51" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_52"/></actions></cue>
  <cue name="Chain_MD_delay_52" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_53"/></actions></cue>
  <cue name="Chain_MD_delay_53" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_54"/></actions></cue>
  <cue name="Chain_MD_delay_54" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_55"/></actions></cue>
  <cue name="Chain_MD_delay_55" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_56"/></actions></cue>
  <cue name="Chain_MD_delay_56" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_57"/></actions></cue>
  <cue name="Chain_MD_delay_57" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_58"/></actions></cue>
  <cue name="Chain_MD_delay_58" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_59"/></actions></cue>
  <cue name="Chain_MD_delay_59" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_60"/></actions></cue>  
  <cue name="Chain_MD_delay_60" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_61"/></actions></cue>
  <cue name="Chain_MD_delay_61" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_62"/></actions></cue>
  <cue name="Chain_MD_delay_62" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_63"/></actions></cue>
  <cue name="Chain_MD_delay_63" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_64"/></actions></cue>
  <cue name="Chain_MD_delay_64" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_65"/></actions></cue>
  <cue name="Chain_MD_delay_65" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_66"/></actions></cue>
  <cue name="Chain_MD_delay_66" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_67"/></actions></cue>
  <cue name="Chain_MD_delay_67" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_68"/></actions></cue>
  <cue name="Chain_MD_delay_68" instantiate="true"><conditions><event_cue_signalled/></conditions><actions><signal_cue cue="Chain_MD_delay_69"/></actions></cue>
  <cue name="Chain_MD_delay_69" instantiate="true"><conditions><event_cue_signalled/></conditions><actions></actions></cue>
  

  <!--
    Testing ordering of signal_cue and signal_cue_instantly.
    Above recursion test suggests the "instantly" version is processed ahead
    of pending cues, but what if multiple "instantly"s are queued?
    
    Test result:
    - "signal_cue_instantly" is indeed instant, being performed before
      any subsequent actions (eg. not queued or delayed at all).
    - "signal_cue" gets put at the end of the cue queue that exists when
      this command is seen (maybe).
  -->
  <cue name="Signal_Order_Test" instantiate="true"  checkinterval="3s">
    <conditions>
      <check_value value="false"/>
    </conditions>
    <actions>
      <raise_lua_event name="'directChatMessageReceived'" param="'Test;started'"/>

      <debug_text text="'signal_cue Order_Test_del_a'" filter="general"/>
      <signal_cue cue="Order_Test_del_a"/>
      <debug_text text="'signal_cue_instantly Order_Test_inst_a'" filter="general"/>
      <signal_cue_instantly cue="Order_Test_inst_a"/>
      <debug_text text="'signal_cue_instantly Order_Test_inst_b'" filter="general"/>
      <signal_cue_instantly cue="Order_Test_inst_b"/>
      <debug_text text="'signal_cue Order_Test_del_b'" filter="general"/>
      <signal_cue cue="Order_Test_del_b"/>
    </actions>
  </cue>

  <cue name="Order_Test_del_a" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_del_a at %s'.[player.age]" filter="general"/>
    </actions>
  </cue>
  <cue name="Order_Test_del_b" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_del_b at %s'.[player.age]" filter="general"/>
    </actions>
  </cue>
  <cue name="Order_Test_del_c" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_del_c at %s'.[player.age]" filter="general"/>
    </actions>
  </cue>
  <cue name="Order_Test_del_d" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_del_d at %s'.[player.age]" filter="general"/>
    </actions>
  </cue>
  <cue name="Order_Test_inst_a" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_inst_a at %s'.[player.age]" filter="general"/>
      <!--Note: this gets processed before Order_Test_del_b-->
      <debug_text text="'signal_cue Order_Test_del_c'" filter="general"/>
      <signal_cue cue="Order_Test_del_c"/>
      <debug_text text="'signal_cue_instantly Order_Test_inst_a0'" filter="general"/>
      <signal_cue_instantly cue="Order_Test_inst_a0"/>
      <debug_text text="'signal_cue_instantly Order_Test_inst_a1'" filter="general"/>
      <signal_cue_instantly cue="Order_Test_inst_a1"/>
    </actions>
  </cue>
  <cue name="Order_Test_inst_b" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_inst_b at %s'.[player.age]" filter="general"/>
      <debug_text text="'signal_cue Order_Test_del_d'" filter="general"/>
      <signal_cue cue="Order_Test_del_d"/>
      <debug_text text="'signal_cue_instantly Order_Test_inst_b0'" filter="general"/>
      <signal_cue_instantly cue="Order_Test_inst_b0"/>
      <debug_text text="'signal_cue_instantly Order_Test_inst_b1'" filter="general"/>
      <signal_cue_instantly cue="Order_Test_inst_b1"/>
    </actions>
  </cue>
  <cue name="Order_Test_inst_a0" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_inst_a0 at %s'.[player.age]" filter="general"/>
    </actions>
  </cue>
  <cue name="Order_Test_inst_a1" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_inst_a1 at %s'.[player.age]" filter="general"/>
    </actions>
  </cue>
  <cue name="Order_Test_inst_b0" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_inst_b0 at %s'.[player.age]" filter="general"/>
    </actions>
  </cue>
  <cue name="Order_Test_inst_b1" instantiate="true">
    <conditions>
      <event_cue_signalled/>
    </conditions>
    <actions>
      <debug_text text="'Order_Test_inst_b1 at %s'.[player.age]" filter="general"/>
    </actions>
  </cue>
  
</cues>
  
</mdscript>