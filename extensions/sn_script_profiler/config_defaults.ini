
# Configuration data for the profiler.
# "config_defaults.ini" is loaded first, and an optional "config.ini" will
# load second and overwrite or append to defaults.

# After tuning this, run Modify_Scripts.exe to fill out the extension
# files to patch scripts with timers, and run Modify_Exe.py to generate
# an exe with high precision timing support.

[General]
    # Can set an explicit x4 path here. If not specified, will use the one set
    # in the x4 customizer settings.
    #x4_path ="C:\Steam\SteamApps\common\X4 Foundations"
    x4_path  =

    # Optionally name the x4 exe to modify. Default is X4.exe.
    # This modified exe will have high precision timing support, and is
    # critical to the profile script timing.
    # Modification is done by the Modify_Exe.py script, and will produce
    # a file with extension ".mod.exe".
    # Note: if running through steam, the modified exe will need to be renamed
    # "X4.exe" (back up the original) to run it. Replace with the original
    # exe when done profiling.
    x4_exe_name = X4.exe

    # Flags indicate if all extension md scripts and/or all ai scripts
    # are profiled. If True, overrides per-extension settings below.
    include_all_ext_md = false
    include_all_ext_ai = false


# Settings affecting the python server that accumulates measurements
# and generates reports.
[Server]
    # Reports write back to this file name (in the sn_script_profiler folter)
    # in json format.
    report_file="profile.json"
    # TODO: more controls.


# Handling of each extension can be set using extension specific sections,
# where section name is the extension folder name.

# Basic X4 scripts.
[X4]
    include_md = true
    include_ai = true

# Measure this extension's scripts.
# Note: these are forced true anyway (so a reference empty cue can be measured
# for timer overhead), but shown here as an example.
[sn_measure_perf]
    include_md = true